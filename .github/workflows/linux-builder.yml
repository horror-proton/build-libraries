# This is a basic workflow to help you get started with Actions

name: Build Linux Libraries

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the regression2 branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  OPENCV_REF: 4.5.3
  FASTDEPLOY_VER: 1.0.0
  FASTDEPLOY_REF: release/1.0.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Packages
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake patchelf
      # Runs a set of commands using the runners shell
      - name: Clone OpenCV
        run: |
          cd ~
          git clone https://github.com/opencv/opencv.git -b ${{ env.OPENCV_REF }} --depth=1

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          remove_stale_cache: false

      - name: Build OpenCV
        run: |
            cd ~/opencv
            mkdir build && cd build
            cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DENABLE_CCACHE=ON \
              -DBUILD_SHARED_LIBS=OFF \
              -DWITH_IPP=OFF \
              -DBUILD_IPP_IW=OFF \
              -DWITH_LAPACK=OFF \
              -DWITH_EIGEN=OFF \
              -DBUILD_ZLIB=OFF \
              -DBUILD_OPENEXR=ON \
              -DWITH_JPEG=ON \
              -DBUILD_JPEG=ON \
              -DWITH_PNG=ON \
              -DWITH_PROTOBUF=OFF \
              -DBUILD_PNG=ON \
              -DWITH_TIFF=ON \
              -DBUILD_TIFF=ON \
              -DBUILD_TESTS=OFF \
              -DBUILD_PERF_TESTS=OFF \
              -DBUILD_EXAMPLES=OFF \
              -DWITH_FFMPEG=OFF \
              -DCMAKE_INSTALL_PREFIX=~/opencv4 \
              -DBUILD_opencv_world=OFF \
              ..
            make -j$(nproc --all)
            make install

      - name: Package OpenCV
        run: |
            cd ~/opencv4
            mkdir -p $GITHUB_WORKSPACE/release
            tar -czvf $GITHUB_WORKSPACE/release/opencv-${{ env.OPENCV_REF }}.tar.gz .

      - name: Clone FastDeploy
        run: |
            cd ~
            git clone https://github.com/PaddlePaddle/FastDeploy.git -b ${{ env.FASTDEPLOY_REF }} --depth=1

      - name: Build FastDeploy
        run: |
            cd ~/FastDeploy
            mkdir build && cd build
            cmake .. \
              -DENABLE_ORT_BACKEND=ON \
              -DCMAKE_INSTALL_PREFIX=~/compiled_fastdeploy_sdk \
              -DENABLE_VISION=ON \
              -DOPENCV_DIRECTORY=~/opencv4/lib/cmake/opencv4/ # \
              # -DCMAKE_INSTALL_RPATH='$ORIGIN/../3rdparty/lib/:$ORIGIN/lib/:$ORIGIN/'
            make -j$(nproc --all)
            make install

      - name: Pack FastDeploy
        run: |
          cd ~/compiled_fastdeploy_sdk
          mkdir -p $GITHUB_WORKSPACE/release
          tar -czvf $GITHUB_WORKSPACE/release/fastdeploy-${{ env.FASTDEPLOY_VER }}.tar.gz .

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: |
            release/*
